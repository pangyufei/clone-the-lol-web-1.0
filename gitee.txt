通过命令创建一个新的版本库
touch REAME.md   
git int                                      初始化项目          
git add REAME.md                  添加到缓存区  -A 当前目录全部文件
git commit -m "first commit"  提交到git到版本库 -m 是提交的注释
git remote add origin xxx.git   绑定远程仓库
git push -u origin master        推送

通过命令推送一个已存在的版本库
git remote add origin xxx.git
git push -u origin master
基本操作
1、git pull 命令用于从远程代码合并本地的版本
2   git pull <远程主机名> <远程分支名>:<本地分支名>
将远程主机origin的master分支拉取过来，与本地的brantest分支合并
git pull origin master:brantest
git pull origin master  如果远程分支是与当前分支合并，则冒号厚明的部分可以省略
分支管理
1、新建分支
git checkout -b dev
git branch 创建完可以查看一下，分支已经切换到dev（会列出所有的分支，当前分支下会有一个*号）
手动切换到dev分支：git checkout dev
提交该分支到远程仓库
git push origin dev
2、拉取分支：把远程分支拉到本地，dev为远程仓库的分支名
git fetch origin dev
在本地创建分支dev并切换到该分支
git checkout -b dev origin/dev
把某个分支上的内容都拉取到本地
git pull origin dev (拉取分支)
3、提交分支
git checkout dev   切换分支
提交到分支dev上
git add .
git commit -m 'dev'
git push -u origin dev
4、合并分子
git checkou master
如果是多人开发的话 需要把远程master上的代码pull下来
git pull origin master
删除本地分支
git branch -d dev
删除远程分支
git push remote_name -d remote_branch_name
例如
git push origin -d tmp
git branch -a 

分支改名：
本地分支重命名
git branch -m oldName newName
删除远程分支
git push --delete origin oldName
上传新命名的本地分支
git push origin newName
查看分支合并图
git log --graph
打标签
git tag
指定commit id 打标签：git tag 标签名commit ID
指定标签信息git tag -a 标签名 -m "标签信息"
切换到指定标签： git checkout 标签名
查看说明文字：git show  标签名
推送标签
推送标签到远程：git push origin 标签名
一次性推动全部尚未推动到远程的本地标签： git push origin --tags
删除标签
先本地删除： git tag -d 标签名
再从远程删除： git push origin:refs/tags/xxx
五、版本恢复
回退版本
git log
git reset --hard xxx
git push -f 强推
五、GIT下载代理等
git clone -b v4.1.3 
git submodule update
git config --global http.proxy 'socks5://127.0.0.1:10808'
git config -global http.proxy http://127.0.0.1:1081



